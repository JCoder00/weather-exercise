{"version":3,"sources":["components/Weather.js","index.js"],"names":["Weather","useState","suggested_london","updateSuggestedLondon","suggested_paris","updateSuggestedParis","suggested_rome","updateSuggestedRome","suggested_berlin","updateSuggestedBerlin","useEffect","getSuggested","city","updateCity","axios","get","process","then","res","data","list","weather","description","catch","error","console","updateWeather","searched_city","updateSearchedCity","forecast","i","length","push","className","type","id","value","onClick","document","getElementById","join","ReactDOM","render","StrictMode"],"mappings":"+PAqEeA,EAjEC,WACd,MAAkDC,mBAAS,IAA3D,mBAAOC,EAAP,KAAyBC,EAAzB,KACA,EAAgDF,mBAAS,IAAzD,mBAAOG,EAAP,KAAwBC,EAAxB,KACA,EAA8CJ,mBAAS,IAAvD,mBAAOK,EAAP,KAAuBC,EAAvB,KACA,EAAkDN,mBAAS,IAA3D,mBAAOO,EAAP,KAAyBC,EAAzB,KAEAC,qBAAU,WACR,IAAMC,EAAe,SAACC,EAAMC,GAC1BC,IAAMC,IAAN,6DAAgEH,EAAhE,wBAAoFI,qCAAyCC,MAAK,SAAAC,GAChIL,EAAWK,EAAIC,KAAKC,KAAK,GAAGC,QAAQ,GAAGC,gBACtCC,OAAM,SAAAC,GAAK,OAAIC,QAAQD,MAAMA,OAGlCb,EAAa,SAAUR,GACvBQ,EAAa,QAASN,GACtBM,EAAa,OAAQJ,GACrBI,EAAa,SAAUF,KACtB,IAEH,MAAiCR,mBAAS,MAA1C,mBAAOoB,EAAP,KAAgBK,EAAhB,KACA,EAA4CzB,mBAAS,UAArD,mBAAO0B,EAAP,KAAsBC,EAAtB,KAYA,OAVAlB,qBAAU,WACRI,IAAMC,IAAN,6DAAgEY,EAAhE,wBAA6FX,qCAAyCC,MAAK,SAAAC,GAEzI,IADA,IAAIW,EAAW,GACNC,EAAI,EAAGA,EAAIZ,EAAIC,KAAKC,KAAKW,OAAQD,IACxCD,EAASG,KAAKd,EAAIC,KAAKC,KAAKU,GAAGT,QAAQ,GAAGC,aAE5CI,EAAcG,MACbN,OAAM,SAAAC,GAAK,OAAIC,QAAQD,MAAMA,QAC/B,CAACG,IAGF,sBAAK,cAAY,UAAUM,UAAU,UAArC,UACE,uBAAOC,KAAK,OAAOC,GAAG,eACtB,uBAAOD,KAAK,SAASE,MAAM,SAASC,QAAS,kBAAMT,EAAmBU,SAASC,eAAe,cAAcH,UAF9G,WAIE,uBAJF,kBAKkBT,EALlB,4BAK0DN,EAAUA,EAAQmB,KAAK,MAAQ,GACvF,uBACA,uBAPF,oBASE,uBACA,sBAAKP,UAAU,SAAf,UACE,sBAAKA,UAAU,OAAf,UACE,wCACA,mBAAGA,UAAU,OAAb,SAAqB/B,OAEvB,sBAAK+B,UAAU,OAAf,UACE,uCACA,mBAAGA,UAAU,OAAb,SAAqB7B,OAEvB,sBAAK6B,UAAU,OAAf,UACE,sCACA,mBAAGA,UAAU,OAAb,SAAqB3B,OAEvB,sBAAK2B,UAAU,OAAf,UACE,wCACA,mBAAGA,UAAU,OAAb,SAAqBzB,cCzD/BiC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFL,SAASC,eAAe,W","file":"static/js/main.52d7ea4a.chunk.js","sourcesContent":["import axios from 'axios';\r\nimport React, { useEffect, useState } from 'react';\r\nimport '../styling/weather.scss';\r\n\r\nconst Weather = () => {\r\n  const [suggested_london, updateSuggestedLondon] = useState('');\r\n  const [suggested_paris, updateSuggestedParis] = useState('');\r\n  const [suggested_rome, updateSuggestedRome] = useState('');\r\n  const [suggested_berlin, updateSuggestedBerlin] = useState('');\r\n\r\n  useEffect(() => {\r\n    const getSuggested = (city, updateCity) => {\r\n      axios.get(`https://api.openweathermap.org/data/2.5/forecast?q=${city}&cnt=1&appid=${process.env.REACT_APP_WEATHER_API_KEY}`).then(res => {\r\n        updateCity(res.data.list[0].weather[0].description);\r\n      }).catch(error => console.error(error));\r\n    }\r\n\r\n    getSuggested(\"london\", updateSuggestedLondon);\r\n    getSuggested(\"paris\", updateSuggestedParis);\r\n    getSuggested(\"rome\", updateSuggestedRome);\r\n    getSuggested(\"berlin\", updateSuggestedBerlin);\r\n  }, []);\r\n  \r\n  const [weather, updateWeather] = useState(null);\r\n  const [searched_city, updateSearchedCity] = useState('London');\r\n\r\n  useEffect(() => {\r\n    axios.get(`https://api.openweathermap.org/data/2.5/forecast?q=${searched_city}&cnt=5&appid=${process.env.REACT_APP_WEATHER_API_KEY}`).then(res => {\r\n      let forecast = []\r\n      for (let i = 0; i < res.data.list.length; i++) {\r\n        forecast.push(res.data.list[i].weather[0].description);\r\n      }\r\n      updateWeather(forecast);\r\n    }).catch(error => console.error(error))\r\n  }, [searched_city])\r\n\r\n  return (\r\n    <div data-testid=\"weather\" className=\"weather\">\r\n      <input type=\"text\" id=\"city-input\"></input>\r\n      <input type=\"button\" value=\"Submit\" onClick={() => updateSearchedCity(document.getElementById(\"city-input\").value)}></input>\r\n      Weather:\r\n      <br />\r\n      The weather in {searched_city} for the next 5 days is: {weather ? weather.join(', ') : ''}\r\n      <br />\r\n      <br />\r\n      Suggested cities:\r\n      <br />\r\n      <div className=\"cities\">\r\n        <div className=\"city\">\r\n          <h2>London</h2>\r\n          <p className=\"desc\">{suggested_london}</p>\r\n        </div>\r\n        <div className=\"city\">\r\n          <h2>Paris</h2>\r\n          <p className=\"desc\">{suggested_paris}</p>\r\n        </div>\r\n        <div className=\"city\">\r\n          <h2>Rome</h2>\r\n          <p className=\"desc\">{suggested_rome}</p>\r\n        </div>\r\n        <div className=\"city\">\r\n          <h2>Berlin</h2>\r\n          <p className=\"desc\">{suggested_berlin}</p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Weather;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './styling/index.scss';\r\nimport Weather from './components/Weather';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Weather />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}