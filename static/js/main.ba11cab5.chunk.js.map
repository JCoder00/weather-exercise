{"version":3,"sources":["components/Weather.js","index.js"],"names":["Weather","useState","weather","updateWeather","searched_city","updateSearchedCity","useEffect","axios","get","process","then","res","forecast","i","data","list","length","console","log","description","push","catch","error","className","type","id","value","onClick","document","getElementById","join","ReactDOM","render","StrictMode"],"mappings":"gQA8BeA,EA1BC,WACd,MAAiCC,mBAAS,MAA1C,mBAAOC,EAAP,KAAgBC,EAAhB,KACA,EAAqDF,mBAAS,IAA9D,0BAAOG,OAAP,MAAqB,SAArB,EAA+BC,EAA/B,KAaA,OAXAC,qBAAU,WACRC,IAAMC,IAAN,6DAAgEJ,EAAhE,wBAA6FK,qCAAyCC,MAAK,SAAAC,GAEzI,IADA,IAAIC,EAAW,GACNC,EAAI,EAAGA,EAAIF,EAAIG,KAAKC,KAAKC,OAAQH,IACxCI,QAAQC,IAAIP,EAAIG,KAAKC,KAAKF,GAAGX,QAAQ,GAAGiB,aACxCP,EAASQ,KAAKT,EAAIG,KAAKC,KAAKF,GAAGX,QAAQ,GAAGiB,aAE5ChB,EAAcS,MACbS,OAAM,SAAAC,GAAK,OAAIL,QAAQK,MAAMA,QAC/B,CAAClB,IAGF,sBAAK,cAAY,UAAUmB,UAAU,UAArC,UACE,uBAAOC,KAAK,OAAOC,GAAG,eACtB,uBAAOD,KAAK,SAASE,MAAM,SAASC,QAAS,kBAAMtB,EAAmBuB,SAASC,eAAe,cAAcH,UAF9G,WAIE,uBAJF,kBAKkBtB,EALlB,4BAK0DF,EAAUA,EAAQ4B,KAAK,MAAQ,OCpB7FC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFL,SAASC,eAAe,W","file":"static/js/main.ba11cab5.chunk.js","sourcesContent":["import axios from 'axios';\r\nimport React, { useEffect, useState } from 'react';\r\nimport '../styling/weather.scss';\r\n\r\nconst Weather = () => {\r\n  const [weather, updateWeather] = useState(null);\r\n  const [searched_city=\"London\", updateSearchedCity] = useState('');\r\n\r\n  useEffect(() => {\r\n    axios.get(`https://api.openweathermap.org/data/2.5/forecast?q=${searched_city}&cnt=5&appid=${process.env.REACT_APP_WEATHER_API_KEY}`).then(res => {\r\n      let forecast = []\r\n      for (let i = 0; i < res.data.list.length; i++) {\r\n        console.log(res.data.list[i].weather[0].description);\r\n        forecast.push(res.data.list[i].weather[0].description);\r\n      }\r\n      updateWeather(forecast);\r\n    }).catch(error => console.error(error))\r\n  }, [searched_city])\r\n\r\n  return (\r\n    <div data-testid=\"weather\" className=\"weather\">\r\n      <input type=\"text\" id=\"city-input\"></input>\r\n      <input type=\"button\" value=\"Submit\" onClick={() => updateSearchedCity(document.getElementById(\"city-input\").value)}></input>\r\n      Weather:\r\n      <br />\r\n      The weather in {searched_city} for the next 5 days is: {weather ? weather.join(', ') : ''}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Weather;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './styling/index.scss';\r\nimport Weather from './components/Weather';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Weather />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}